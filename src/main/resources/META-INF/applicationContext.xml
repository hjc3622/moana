<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task  
        http://www.springframework.org/schema/task/spring-task-3.1.xsd  ">
         
<!--     <bean id="configProperties"
        class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath*:META-INF/*.properties</value>
            </list>
        </property>
    </bean>

    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties"></property>
    </bean>
 -->

    <!-- 当 Spring 容器启动时，AutowiredAnnotationBeanPostProcessor 将扫描 Spring 容器中所有 
        Bean，当发现 Bean 中拥有@Autowired 注释时就找到和其匹配（默认按类型匹配）的 Bean，并注入到对应的地方中去。 -->
   <!-- 
    <bean
        class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
 -->
    <!-- Jpa 事务配置 -->
  <!--  <bean class="org.springframework.orm.jpa.JpaTransactionManager"
        id="transactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
 -->     <!--jpaVendorAdapter:指定实现JPA的适配器 -->
   <!--  <bean id="jpaVendorAdapter"
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="true" />
        <property name="database" value="moana" />
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLMyISAMDialect" />
    </bean> -->
    
    <!-- 第一步  定义服务层代码的存放路径-->
     <context:component-scan base-package="lab.io.rush.service"></context:component-scan>
     
     <!-- 第二步 定义实体的工厂bean -->
     <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
     		<property name="persistenceUnitName" value="MyUnit"></property>
     		<property name="persistenceXmlLocation" value="classpath*:META-INF/persistence.xml"></property>
     </bean>
     <!--第三步 定义事务管理器 -->
     <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
       <property name="EntityManagerFactory" ref="entityManagerFactory"></property>
     </bean>
    <!-- JPA实体管理工厂的配置 -->
    <!-- 
    <bean
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        id="entityManagerFactory">
        <property name="persistenceUnitName" value="MyUnit" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="org.mariadb.jdbc.Driver" />
        <property name="url" value="jdbc:mariadb://localhost:3306/moana" />
        <property name="username" value="root" />
        <property name="password" value="hjc3622" />
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="true" />
        <property name="testWhileIdle" value="true" />
        <property name="timeBetweenEvictionRunsMillis" value="1800000" />
        <property name="numTestsPerEvictionRun" value="3" />
        <property name="minEvictableIdleTimeMillis" value="1800000" />
        <property name="defaultAutoCommit" value="false" />
    </bean>
 -->
    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="lab.io.rush.repository"
        entity-manager-factory-ref="entityManagerFactory"
        repository-impl-postfix="Imp"
        transaction-manager-ref="transactionManager"></jpa:repositories>
       
        <tx:annotation-driven transaction-manager="transactionManager" />
	
		<!-- 邮件发送 -->        
		<context:property-placeholder location="classpath*:META-INF/mail.properties" />  
    <!-- 邮件发送器   -->    
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">    
        <property name="host" value="${mail.host}" />   
        <property name="username" value="${mail.username}" />    
        <property name="password" value="${mail.password}" />    
        <property name="defaultEncoding" value="UTF-8"></property>    
        <property name="javaMailProperties">    
            <props>    
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>    
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>    
                <prop key="mail.smtp.port">${mail.smtp.port}</prop>    
            </props>       
        </property>    
    </bean>    
      
    <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">  
        <!-- 发件人email -->  
        <property name="from" value="${mail.username}" />  
    </bean>  
      
    <bean id="mailUtil" class="lab.io.rush.service.mailUtil">  
        <property name="mailSender" ref="mailSender"></property>  
        <property name="simpleMailMessage" ref="simpleMailMessage"></property>  
    </bean>     
</beans>